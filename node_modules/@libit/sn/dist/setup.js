"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.setup = void 0;
const tslib_1 = require("tslib");
const sn_1 = require("./sn");
const chalk_1 = tslib_1.__importDefault(require("chalk"));
const fs = tslib_1.__importStar(require("fs-extra"));
const fail = (e) => console.error('Could not read serial number:', e);
async function setup(options = {}) {
    try {
        return await sn_1.sn(options);
    }
    catch (e) {
        if (process.platform !== 'win32' && e.toString().match(/Permission denied/i)) {
            console.info(chalk_1.default.inverse('Your system requires root/administrative privilege to access the serial number.'));
            console.info(chalk_1.default.red('Attempting to run command with `sudo` and cache your serial for future use.'));
            return await snWithSudo(options);
        }
        else {
            fail(e);
        }
    }
}
exports.setup = setup;
async function snWithSudo(options) {
    try {
        const serial = await sn_1.sn({ ...options, sudo: true });
        const file = sn_1.resolveCacheFilePath(options);
        try {
            await fs.writeFile(file, serial);
            console.info(chalk_1.default.green('Successfully cached serial number'));
            return serial;
        }
        catch (e) {
            console.error('Could not write serial number cache file:', e);
        }
    }
    catch (e) {
        fail(e);
    }
}
//# sourceMappingURL=setup.js.map